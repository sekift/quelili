<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quelili.back.dao.SysUserMapper">
  <resultMap id="BaseResultMap" type="com.quelili.back.model.SysUser">
    <id column="userid" jdbcType="BIGINT" property="userid" />
    <result column="usercode" jdbcType="VARCHAR" property="usercode" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="userpass" jdbcType="VARCHAR" property="userpass" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="unbl" jdbcType="TINYINT" property="unbl" />
    <result column="entid" jdbcType="BIGINT" property="entid" />
    <result column="parententid" jdbcType="BIGINT" property="parententid" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="invitecode" jdbcType="VARCHAR" property="invitecode" />
    <result column="note" jdbcType="VARCHAR" property="note" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    userid, usercode, username, userpass, email, mobile, unbl, entid, parententid, createtime, 
    updatetime, invitecode, note
  </sql>
  <select id="selectByExample" parameterType="com.quelili.back.model.SysUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from sys_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where userid = #{userid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_user
    where userid = #{userid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.quelili.back.model.SysUserExample">
    delete from sys_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.quelili.back.model.SysUser">
    insert into sys_user (userid, usercode, username, 
      userpass, email, mobile, 
      unbl, entid, parententid, 
      createtime, updatetime, invitecode, 
      note)
    values (#{userid,jdbcType=BIGINT}, #{usercode,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{userpass,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{unbl,jdbcType=TINYINT}, #{entid,jdbcType=BIGINT}, #{parententid,jdbcType=BIGINT}, 
      #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, #{invitecode,jdbcType=VARCHAR}, 
      #{note,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.quelili.back.model.SysUser">
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userid,
      </if>
      <if test="usercode != null">
        usercode,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="userpass != null">
        userpass,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="unbl != null">
        unbl,
      </if>
      <if test="entid != null">
        entid,
      </if>
      <if test="parententid != null">
        parententid,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="invitecode != null">
        invitecode,
      </if>
      <if test="note != null">
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="usercode != null">
        #{usercode,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="userpass != null">
        #{userpass,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="unbl != null">
        #{unbl,jdbcType=TINYINT},
      </if>
      <if test="entid != null">
        #{entid,jdbcType=BIGINT},
      </if>
      <if test="parententid != null">
        #{parententid,jdbcType=BIGINT},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="invitecode != null">
        #{invitecode,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.quelili.back.model.SysUserExample" resultType="java.lang.Integer">
    select count(*) from sys_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_user
    <set>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=BIGINT},
      </if>
      <if test="record.usercode != null">
        usercode = #{record.usercode,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.userpass != null">
        userpass = #{record.userpass,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.unbl != null">
        unbl = #{record.unbl,jdbcType=TINYINT},
      </if>
      <if test="record.entid != null">
        entid = #{record.entid,jdbcType=BIGINT},
      </if>
      <if test="record.parententid != null">
        parententid = #{record.parententid,jdbcType=BIGINT},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null">
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.invitecode != null">
        invitecode = #{record.invitecode,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_user
    set userid = #{record.userid,jdbcType=BIGINT},
      usercode = #{record.usercode,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      userpass = #{record.userpass,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      unbl = #{record.unbl,jdbcType=TINYINT},
      entid = #{record.entid,jdbcType=BIGINT},
      parententid = #{record.parententid,jdbcType=BIGINT},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      invitecode = #{record.invitecode,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.quelili.back.model.SysUser">
    update sys_user
    <set>
      <if test="usercode != null">
        usercode = #{usercode,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="userpass != null">
        userpass = #{userpass,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="unbl != null">
        unbl = #{unbl,jdbcType=TINYINT},
      </if>
      <if test="entid != null">
        entid = #{entid,jdbcType=BIGINT},
      </if>
      <if test="parententid != null">
        parententid = #{parententid,jdbcType=BIGINT},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="invitecode != null">
        invitecode = #{invitecode,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where userid = #{userid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.quelili.back.model.SysUser">
    update sys_user
    set usercode = #{usercode,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      userpass = #{userpass,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      unbl = #{unbl,jdbcType=TINYINT},
      entid = #{entid,jdbcType=BIGINT},
      parententid = #{parententid,jdbcType=BIGINT},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      invitecode = #{invitecode,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR}
    where userid = #{userid,jdbcType=BIGINT}
  </update>

  <select id="search" parameterType="com.quelili.back.model.SysUser" resultMap="BaseResultMap">
    SELECT DISTINCT
    <include refid="Base_Column_List"/>
    FROM sys_user
    <where>
    <if test="username!=null and username!=''">
      AND username like '%${username}%'
    </if>
    <if test="mobile!=null and mobile!=''">
      AND mobile like '%${mobile}%'
    </if>
    <if test="entid!=null">
      AND (parententid = #{entid} OR entid = #{entid})
    </if>
    </where>
    ORDER BY createtime DESC
  </select>

  <select id="searchByEntId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from sys_user where entid=#{entid}
  </select>
</mapper>